/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Store, StoreInterface } from "../Store";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getData",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c2638038062000c26833981810160405281019062000037919062000294565b620000836040518060400160405280601a81526020017f4465706c6f79696e672053746f7265207769746820646174613a00000000000081525082620000a360201b620001eb1760201c565b80600090805190602001906200009b92919062000172565b5050620004e1565b620001458282604051602401620000bc9291906200031a565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200014960201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054620001809062000406565b90600052602060002090601f016020900481019282620001a45760008555620001f0565b82601f10620001bf57805160ff1916838001178555620001f0565b82800160010185558215620001f0579182015b82811115620001ef578251825591602001919060010190620001d2565b5b509050620001ff919062000203565b5090565b5b808211156200021e57600081600090555060010162000204565b5090565b60006200023962000233846200037e565b62000355565b9050828152602081018484840111156200025257600080fd5b6200025f848285620003d0565b509392505050565b600082601f8301126200027957600080fd5b81516200028b84826020860162000222565b91505092915050565b600060208284031215620002a757600080fd5b600082015167ffffffffffffffff811115620002c257600080fd5b620002d08482850162000267565b91505092915050565b6000620002e682620003b4565b620002f28185620003bf565b935062000304818560208601620003d0565b6200030f81620004d0565b840191505092915050565b60006040820190508181036000830152620003368185620002d9565b905081810360208301526200034c8184620002d9565b90509392505050565b60006200036162000374565b90506200036f82826200043c565b919050565b6000604051905090565b600067ffffffffffffffff8211156200039c576200039b620004a1565b5b620003a782620004d0565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003f0578082015181840152602081019050620003d3565b8381111562000400576000848401525b50505050565b600060028204905060018216806200041f57607f821691505b6020821081141562000436576200043562000472565b5b50919050565b6200044782620004d0565b810181811067ffffffffffffffff82111715620004695762000468620004a1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61073580620004f16000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633bc5de301461003b57806347064d6a14610059575b600080fd5b610043610075565b60405161005091906104d4565b60405180910390f35b610073600480360381019061006e919061045a565b610107565b005b6060600080546100849061062d565b80601f01602080910402602001604051908101604052809291908181526020018280546100b09061062d565b80156100fd5780601f106100d2576101008083540402835291602001916100fd565b820191906000526020600020905b8154815290600101906020018083116100e057829003601f168201915b5050505050905090565b6101d16040518060400160405280601f81526020017f4368616e67696e6720646174612066726f6d202725732720746f2027257327008152506000805461014d9061062d565b80601f01602080910402602001604051908101604052809291908181526020018280546101799061062d565b80156101c65780601f1061019b576101008083540402835291602001916101c6565b820191906000526020600020905b8154815290600101906020018083116101a957829003601f168201915b505050505083610287565b80600090805190602001906101e792919061034f565b5050565b61028382826040516024016102019291906104f6565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610326565b5050565b61032183838360405160240161029f9392919061052d565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610326565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461035b9061062d565b90600052602060002090601f01602090048101928261037d57600085556103c4565b82601f1061039657805160ff19168380011785556103c4565b828001600101855582156103c4579182015b828111156103c35782518255916020019190600101906103a8565b5b5090506103d191906103d5565b5090565b5b808211156103ee5760008160009055506001016103d6565b5090565b60006104056104008461059e565b610579565b90508281526020810184848401111561041d57600080fd5b6104288482856105eb565b509392505050565b600082601f83011261044157600080fd5b81356104518482602086016103f2565b91505092915050565b60006020828403121561046c57600080fd5b600082013567ffffffffffffffff81111561048657600080fd5b61049284828501610430565b91505092915050565b60006104a6826105cf565b6104b081856105da565b93506104c08185602086016105fa565b6104c9816106ee565b840191505092915050565b600060208201905081810360008301526104ee818461049b565b905092915050565b60006040820190508181036000830152610510818561049b565b90508181036020830152610524818461049b565b90509392505050565b60006060820190508181036000830152610547818661049b565b9050818103602083015261055b818561049b565b9050818103604083015261056f818461049b565b9050949350505050565b6000610583610594565b905061058f828261065f565b919050565b6000604051905090565b600067ffffffffffffffff8211156105b9576105b86106bf565b5b6105c2826106ee565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b838110156106185780820151818401526020810190506105fd565b83811115610627576000848401525b50505050565b6000600282049050600182168061064557607f821691505b6020821081141561065957610658610690565b5b50919050565b610668826106ee565b810181811067ffffffffffffffff82111715610687576106866106bf565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea264697066735822122021c4d7019016f4424b0d803db71cc4a0b39729212a38d5cd58053cf8e4c624b264736f6c63430008040033";

type StoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Store__factory extends ContractFactory {
  constructor(...args: StoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Store> {
    return super.deploy(_data, overrides || {}) as Promise<Store>;
  }
  override getDeployTransaction(
    _data: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_data, overrides || {});
  }
  override attach(address: string): Store {
    return super.attach(address) as Store;
  }
  override connect(signer: Signer): Store__factory {
    return super.connect(signer) as Store__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreInterface {
    return new utils.Interface(_abi) as StoreInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Store {
    return new Contract(address, _abi, signerOrProvider) as Store;
  }
}
